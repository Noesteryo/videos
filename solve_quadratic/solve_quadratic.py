from manim import *

####################################################################
# "titre" means "title" in french                                  #
# I hope it's clear, if not you can send me a message              #
####################################################################

class solv2nddeg(Scene):
    def construct(self):
        
        #Video title and introduction
        titre1a = MathTex("\\text{Let's solve } ax^2+bx+c=0 \\text{ for x}")
        titre1b = MathTex("\\text{given } a,b,c \\in \\mathbb{R} \\text{ and } a \\neq 0").next_to(titre1a,DOWN)
        titre = MathTex("\\underline{\\text{Solving } ax^2+bx+c=0 \\text{ :}}").to_edge(UP)
        
        eq1 = MathTex("\\text{To do this, we will calculate }","\\Delta")
        b1 = BraceLabel(eq1[1],"\\Delta \\text{ is called the \\emph{discriminant}}")
        eq2a = MathTex("\\text{The formula is the following :}")
        eq2b = MathTex("\\Delta = b^2 - 4ac").next_to(eq2a,DOWN)
        eq3 = MathTex("\\text{The number of solutions depends on the sign of the discriminant :}").scale_in_place(0.75)
        
        #Creating the two vertical lines
        d1a = Dot(point=(-7.1+(14.2/3),2.52368,0))
        d1b = Dot(point=(-7.1+(14.2/3),-3.6,0))
        d2a = Dot(point=(-7.1+2*(14.2/3),2.52368,0))
        d2b = Dot(point=(-7.1+2*(14.2/3),-3.6,0))
        l1 = Line(d1a,d1b)
        l2 = Line(d2a,d2b)
        
        #First case (Delta > 0)
        s1t = MathTex("\\underline{ \\text{ If } \\Delta > 0 \\text{ :} }").scale_in_place(0.75).next_to(l1,aligned_edge=UP).to_edge(LEFT)
        s1a = MathTex("\\text{In this case there are two real solutions.}").scale_in_place(0.45).next_to(s1t,DOWN,buff=0.4,aligned_edge=LEFT)
        s1b = MathTex("\\cdotp x_1 = \\frac{-b - \\sqrt{\\Delta}}{2a}").scale_in_place(0.60).next_to(s1a,DOWN,buff=0.6,aligned_edge=LEFT)
        s1c = MathTex("\\cdotp x_2 = \\frac{-b + \\sqrt{\\Delta}}{2a}").scale_in_place(0.60).next_to(s1b,DOWN,buff=0.4,aligned_edge=LEFT)
        s1d = MathTex("\\underline{\\text{Factorization :}}").scale_in_place(0.60).next_to(s1c,DOWN,buff=0.4,aligned_edge=LEFT)
        s1e = MathTex("ax^2 +bx + c = a(x - x_1)(x- x_2)").scale_in_place(0.50).next_to(s1d,DOWN,buff=0.4,aligned_edge=LEFT)
        
        #Second case (Delta >=0)
        s2t = MathTex("\\underline{ \\text{ If } \\Delta = 0 \\text{ :} }").scale_in_place(0.75).next_to(l1,aligned_edge=UP)
        s2a = MathTex("\\text{In this case there is only one real solution.}").scale_in_place(0.45).next_to(s2t,DOWN,buff=0.4,aligned_edge=LEFT)
        s2b = MathTex("\\cdotp x_1 = -\\frac{b}{2a}").scale_in_place(0.60).next_to(s2a,DOWN,buff=0.6,aligned_edge=LEFT)
        s2c = MathTex("\\underline{\\text{Factorization :}}").scale_in_place(0.60).next_to(s2b,DOWN,buff=0.4,aligned_edge=LEFT)
        s2d = MathTex("ax^2 +bx + c = a(x - x_1)^2").scale_in_place(0.50).next_to(s2c,DOWN,buff=0.4,aligned_edge=LEFT)
        
        #Last case (Delta < 0)
        s3t = MathTex("\\underline{ \\text{ If } \\Delta < 0 \\text{ :} }").scale_in_place(0.75).next_to(l2,aligned_edge=UP)
        s3a = MathTex("\\text{In this case there are no real solutions.}").scale_in_place(0.45).next_to(s3t,DOWN,buff=0.4,aligned_edge=LEFT)
        s3b = MathTex("\\text{But there are two complex solutions :}").scale_in_place(0.45).next_to(s3a,DOWN,buff=0.4,aligned_edge=LEFT)
        s3c = MathTex("\\cdotp x_1 = \\frac{-b - i\\sqrt{-\\Delta}}{2a}").scale_in_place(0.60).next_to(s3b,DOWN,buff=0.6,aligned_edge=LEFT)
        s3d = MathTex("\\cdotp x_2 = \\frac{-b + i\\sqrt{-\\Delta}}{2a}").scale_in_place(0.60).next_to(s3c,DOWN,buff=0.4,aligned_edge=LEFT)
        s3e = MathTex("\\underline{\\text{Factorization :\\emph{(in }}\\mathbb{C} \\text{\\emph{)}}").scale_in_place(0.60).next_to(s3d,DOWN,buff=0.4,aligned_edge=LEFT)
        s3f = MathTex("ax^2 +bx + c = a(x - x_1)(x- x_2)").scale_in_place(0.50).next_to(s3e,DOWN,buff=0.4,aligned_edge=LEFT)
        
        #Example
        #variables that start with b are for braces
        pta = MathTex("\\text{Let's practice on an example}")
        ptb = MathTex("\\underline{\\text{Example :}}").scale_in_place(0.75).next_to(titre,DOWN).to_edge(LEFT)
        pt1a = MathTex("\\text{Solve } 3x^2 -3x -6 =0\\text{, for } x \\in \\mathbb{R}.")
        pt1b = MathTex("\\text{Solve } 3x^2 -3x -6 =0\\text{, for } x \\in \\mathbb{R} \\text{ :}").scale_in_place(0.75).next_to(ptb,DOWN).to_edge(LEFT)
        pt2 = MathTex("\\Delta = b^2 -4ac")
        pt3 = MathTex("\\Delta = (-3)^2 -4 \\times 3 \\times (-6)")
        pt4 = MathTex("\\Delta = 9 + 72")
        pt5a = MathTex("\\Delta ="," 81")
        pt5b = MathTex("\\bullet \\Delta ="," 81").scale_in_place(0.75).next_to(pt1b,DOWN).to_edge(LEFT,buff=1.5)
        bt5 = BraceLabel(pt5a[1],"\\text{This is strictly positive so there are two real solutions}")
        pt6 = MathTex("x_1 = \\frac{-b-\\sqrt{\\Delta}}{2a}")
        pt7 = MathTex("x_1 = \\frac{-(-3)-\\sqrt{81}}{2\\times 3}")
        pt8 = MathTex("x_1 = \\frac{3-9}{6}")
        pt9a = MathTex("x_1 = -1")
        pt9b = MathTex("\\bullet x_1 = -1").scale_in_place(0.75).next_to(pt5b,DOWN,aligned_edge=LEFT).to_edge(LEFT,buff=2)
        pt10 = MathTex("x_2 = \\frac{-b+\\sqrt{\\Delta}}{2a}")
        pt11 = MathTex("x_2 = \\frac{-(-3)+\\sqrt{81}}{2\\times 3}")
        pt12 = MathTex("x_2 = \\frac{3+9}{6}")
        pt13a = MathTex("x_2 = 2")
        pt13b = MathTex("\\bullet x_2 = 2").scale_in_place(0.75).next_to(pt9b,DOWN,aligned_edge=LEFT)
        bt13 = BraceLabel(Group(pt13b ,pt9b),"\\text{We have our two solutions.}",brace_direction=RIGHT).scale_in_place(0.75)
        pt14 = MathTex("\\bullet \\text{\\underline{Factorization :(Bonus)}}").scale_in_place(0.75).next_to(pt13b,DOWN).to_edge(LEFT,buff=1.5)
        pt15a = MathTex("\\bullet 3x^2 -3x -6 = a(x-x_1)(x-x_2)").scale_in_place(0.75).next_to(pt14,DOWN).to_edge(LEFT,buff=2)
        pt15b = MathTex("\\bullet 3x^2 -3x -6 = 3(x+1)(x-2)").scale_in_place(0.75).next_to(pt14,DOWN).to_edge(LEFT,buff=2)
        
        end = MathTex("\\text{That's how you solve a quadratic equation.}")
        
        #Title
        self.play(ShowCreation(titre1a))
        self.play(ShowCreation(titre1b))
        self.wait(2)
        self.play(Uncreate(titre1b),Transform(titre1a,titre))
        self.play(ShowCreation(eq1))
        self.wait()
        self.play(FadeIn(b1))
        self.wait()
        self.play(FadeOut(b1))
        self.wait()
        self.play(Uncreate(eq1))
        self.play(ShowCreation(eq2a))
        self.play(ShowCreation(eq2b))
        self.wait(2)
        self.play(Uncreate(eq2a),Uncreate(eq2b))
        self.play(ShowCreation(eq3))
        self.wait()
        self.play(FadeOut(eq3))
        
        
        #First case
        self.play(ShowCreation(s1t))
        self.play(ShowCreation(s1a))
        self.wait()
        self.play(ShowCreation(s1b))
        self.wait()
        self.play(ShowCreation(s1c))
        self.wait()
        self.play(ShowCreation(s1d))
        self.wait()
        self.play(ShowCreation(s1e))
        self.wait(2)
        
        #Second case and first line
        self.play(ShowCreation(l1))
        self.play(ShowCreation(s2t))
        self.play(ShowCreation(s2a))
        self.wait()
        self.play(ShowCreation(s2b))
        self.wait()
        self.play(ShowCreation(s2c))
        self.wait()
        self.play(ShowCreation(s2d))
        self.wait(2)
        
        #Last case and second line
        self.play(ShowCreation(l2))
        self.play(ShowCreation(s3t))
        self.play(ShowCreation(s3a))
        self.wait()
        self.play(ShowCreation(s3b))
        self.wait()
        self.play(ShowCreation(s3c))
        self.wait()
        self.play(ShowCreation(s3d))
        self.wait()
        self.play(ShowCreation(s3e))
        self.wait()
        self.play(ShowCreation(s3f))
        self.wait()
        self.wait(3)
        
        #Fading out everything (don't judge me on this line : it was easy to write it this way)
        self.play(FadeOut(s1t),FadeOut(s1a),FadeOut(s1b),FadeOut(s1c),FadeOut(s1d),FadeOut(s1e),FadeOut(s2t),FadeOut(s2a),FadeOut(s2b),FadeOut(s2c),FadeOut(s2d),FadeOut(s3t),FadeOut(s3a),FadeOut(s3b),FadeOut(s3c),FadeOut(s3d),FadeOut(s3e),FadeOut(s3f),FadeOut(l1),FadeOut(l2))
        
        #Example
        self.play(ShowCreation(pta))
        self.wait()
        self.play(Transform(pta,ptb))
        self.play(ShowCreation(pt1a))
        self.wait()
        self.play(Transform(pt1a,pt1b))
        self.wait()
        self.play(ShowCreation(pt2))
        self.wait()
        self.play(Transform(pt2,pt3))
        self.wait()
        self.play(Transform(pt2,pt4))
        self.wait()
        self.play(Transform(pt2,pt5a))
        self.wait()
        self.play(FadeIn(bt5))
        self.wait()
        self.play(FadeOut(bt5))
        self.wait()
        self.play(Transform(pt2,pt5b))
        self.wait()
        self.play(ShowCreation(pt6))
        self.wait()
        self.play(Transform(pt6,pt7))
        self.wait()
        self.play(Transform(pt6,pt8))
        self.wait()
        self.play(Transform(pt6,pt9a))
        self.wait()
        self.play(Transform(pt6,pt9b))
        self.wait()
        self.play(ShowCreation(pt10))
        self.wait()
        self.play(Transform(pt10,pt11))
        self.wait()
        self.play(Transform(pt10,pt12))
        self.wait()
        self.play(Transform(pt10,pt13a))
        self.wait()
        self.play(Transform(pt10,pt13b))
        self.wait()
        self.play(FadeIn(bt13))
        self.wait()
        self.play(FadeOut(bt13))
        self.wait()
        self.play(FadeIn(pt14))
        self.wait()
        self.play(ShowCreation(pt15a))
        self.wait(2)
        self.play(Transform(pt15a,pt15b))
        self.wait()
        self.play(FadeOut(pta),FadeOut(pt1a),FadeOut(pt2),FadeOut(pt6),FadeOut(pt10),FadeOut(pt14),FadeOut(pt15a),FadeOut(titre1a))
        self.wait()
        self.play(ShowCreation(end))
        self.wait(2)
        self.play(FadeOut(end))
